А) 
Предположим, у нас есть класс "Автомобиль", и мы хотим, чтобы все его методы и свойства были доступны всем остальным классам в нашей программе.
Тогда мы можем применить модификатор доступа "public" к нашему классу "Автомобиль".

К примеру "public":

public class Автомобиль 
public string Марка;
public string Модель;

В этом примере, все методы и свойства класса "Автомобиль" объявлены с модификатором доступа "public". 
Это означает, что они доступны из любого места программы, и другие классы могут использовать их без ограничений.
########################################################################################################################################################
Б)
Предположим, у нас есть класс "Банковский счет", который имеет поле "баланс" (balance) и метод "снять деньги" (withdraw).
В данном случае, возможно, нам необходимо ограничить доступ к полю "баланс" только внутри класса, чтобы ни кто не снял деньги к примеру.

Таким образом, мы можем объявить поле "баланс" как private, чтобы ограничить его доступ только внутри класса.
########################################################################################################################################################
В)
Допустим, у нас есть класс "Человек", а от него наследуется класс "Студент". 
В классе "Человек" у нас есть защищенное поле "name", и мы используем модификатор доступа protected для этого поля.

Класс "Студент" имеет доступ к полю "name", потому что он наследует его от класса "Человек". 
Таким образом, внутри класса "Студент" можно обращаться к полю "имя" и получать или изменять его значение.

По этому класс "Студент" имеет доступ к полю "name" класса "Человек" и я могу к примеру поменять имя(name) или получить его значение, что там за имя(name) хранится. 
